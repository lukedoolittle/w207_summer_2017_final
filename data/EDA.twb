<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0515.2100                               -->
<workbook original-version='10.3' source-build='10.3.0 (10300.17.0515.2100)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='train' inline='true' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.0xs6g5n1ralzpr116475m1q9y8w9'>
            <connection class='textscan' directory='D:/MIDS/W207/GroupProject' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0xs6g5n1ralzpr116475m1q9y8w9' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='datetime' name='datetime' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='integer' name='holiday' ordinal='2' />
            <column datatype='integer' name='workingday' ordinal='3' />
            <column datatype='integer' name='weather' ordinal='4' />
            <column datatype='real' name='temp' ordinal='5' />
            <column datatype='real' name='atemp' ordinal='6' />
            <column datatype='integer' name='humidity' ordinal='7' />
            <column datatype='real' name='windspeed' ordinal='8' />
            <column datatype='integer' name='casual' ordinal='9' />
            <column datatype='integer' name='registered' ordinal='10' />
            <column datatype='integer' name='count' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[datetime]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[holiday]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>holiday</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workingday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[workingday]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>workingday</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atemp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[atemp]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>atemp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[humidity]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>humidity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windspeed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windspeed]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>windspeed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>casual</remote-name>
            <remote-type>20</remote-type>
            <local-name>[casual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>casual</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>registered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[registered]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>registered</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Atemp (bin)' datatype='integer' name='[Atemp (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[atemp]' peg='0' size='3.31' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Season (bin)' datatype='integer' name='[Season (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[season]' peg='0' size='1' />
      </column>
      <column aggregation='None' caption='Temp (bin)' datatype='integer' name='[Temp (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temp]' peg='0' size='3.22' />
      </column>
      <column caption='Atemp' datatype='real' name='[atemp]' role='measure' type='quantitative' />
      <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
      <column caption='Holiday' datatype='integer' name='[holiday]' role='measure' type='quantitative' />
      <column caption='Humidity' datatype='integer' name='[humidity]' role='measure' type='quantitative' />
      <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
      <column caption='Weather' datatype='integer' name='[weather]' role='measure' type='quantitative' />
      <column caption='Windspeed' datatype='real' name='[windspeed]' role='measure' type='quantitative' />
      <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
      <column-instance column='[season]' derivation='Attribute' name='[attr:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp]' derivation='Avg' name='[avg:temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[holiday]' derivation='Count' name='[cnt:holiday:ok]' pivot='key' type='ordinal' />
      <column-instance column='[holiday]' derivation='Count' name='[cnt:holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[season]' derivation='Count' name='[cnt:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[workingday]' derivation='Count' name='[cnt:workingday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[holiday]' derivation='CountD' name='[ctd:holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[workingday]' derivation='CountD' name='[ctd:workingday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hot]' derivation='InOut' name='[io:Hot:nk]' pivot='key' type='nominal' />
      <column-instance column='[temp]' derivation='Max' name='[max:temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Median' name='[med:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp]' derivation='None' name='[none:temp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[count]' derivation='Stdev' name='[std:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='StdevP' name='[stp:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[atemp]' derivation='Sum' name='[sum:atemp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[holiday]' derivation='Sum' name='[sum:holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[humidity]' derivation='Sum' name='[sum:humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[season]' derivation='Sum' name='[sum:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp]' derivation='Sum' name='[sum:temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather]' derivation='Sum' name='[sum:weather:qk]' pivot='key' type='quantitative' />
      <column-instance column='[windspeed]' derivation='Sum' name='[sum:windspeed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[workingday]' derivation='Sum' name='[sum:workingday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Var' name='[var:count:qk]' pivot='key' type='quantitative' />
      <group name='[Cold]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='5.7400000000000002' />
          <groupfilter function='member' level='[none:temp:ok]' member='6.5600000000000005' />
          <groupfilter function='member' level='[none:temp:ok]' member='7.3799999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='8.1999999999999993' />
          <groupfilter function='member' level='[none:temp:ok]' member='9.0199999999999996' />
          <groupfilter function='member' level='[none:temp:ok]' member='9.8399999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='10.66' />
        </groupfilter>
      </group>
      <group name='[Hot]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='25.420000000000002' />
          <groupfilter function='member' level='[none:temp:ok]' member='26.239999999999998' />
          <groupfilter function='member' level='[none:temp:ok]' member='27.059999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='27.879999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='28.699999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='29.52' />
          <groupfilter function='member' level='[none:temp:ok]' member='30.34' />
          <groupfilter function='member' level='[none:temp:ok]' member='31.16' />
          <groupfilter function='member' level='[none:temp:ok]' member='31.98' />
          <groupfilter function='member' level='[none:temp:ok]' member='32.799999999999997' />
          <groupfilter function='member' level='[none:temp:ok]' member='33.619999999999997' />
          <groupfilter function='member' level='[none:temp:ok]' member='34.439999999999998' />
        </groupfilter>
      </group>
      <group name='[Perfect]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='10.66' />
          <groupfilter function='member' level='[none:temp:ok]' member='11.48' />
          <groupfilter function='member' level='[none:temp:ok]' member='12.300000000000001' />
          <groupfilter function='member' level='[none:temp:ok]' member='13.119999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='13.94' />
          <groupfilter function='member' level='[none:temp:ok]' member='14.76' />
          <groupfilter function='member' level='[none:temp:ok]' member='15.58' />
          <groupfilter function='member' level='[none:temp:ok]' member='16.399999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='17.219999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='18.039999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='18.859999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='19.68' />
          <groupfilter function='member' level='[none:temp:ok]' member='20.5' />
        </groupfilter>
      </group>
      <group name='[Very cold]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='0.81999999999999995' />
          <groupfilter function='member' level='[none:temp:ok]' member='1.6400000000000001' />
          <groupfilter function='member' level='[none:temp:ok]' member='2.46' />
          <groupfilter function='member' level='[none:temp:ok]' member='3.2800000000000002' />
          <groupfilter function='member' level='[none:temp:ok]' member='4.0999999999999996' />
          <groupfilter function='member' level='[none:temp:ok]' member='4.9199999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='5.7400000000000002' />
        </groupfilter>
      </group>
      <group name='[Very hot]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='35.259999999999998' />
          <groupfilter function='member' level='[none:temp:ok]' member='36.079999999999998' />
          <groupfilter function='member' level='[none:temp:ok]' member='36.899999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='37.719999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='38.539999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='39.359999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='41.0' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:/ghangam/My Documents/My Tableau Repository/Datasources/train_w207.tde' schema='Extract' tablename='Extract' update-time='07/14/2017 04:02:07 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10886' timestamp-start='2017-07-14 04:02:07.755' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10886.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10886.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>atemp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[atemp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>atemp</remote-alias>
              <ordinal>1</ordinal>
              <family>train.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.76000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>45.454999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>casual</remote-name>
              <remote-type>2</remote-type>
              <local-name>[casual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>casual</remote-alias>
              <ordinal>2</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>309</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>392135.0</statistic>
                <statistic aggregation='Avg' datatype='real'>36.021954804335842</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>367</statistic>
                <statistic aggregation='Stdev' datatype='real'>49.960476572649526</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.958181807631085</statistic>
                <statistic aggregation='Var' datatype='real'>2496.0492193662622</statistic>
                <statistic aggregation='VarP' datatype='real'>2495.8199295243217</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>41294965.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>count</remote-alias>
              <ordinal>3</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>822</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2085476.0</statistic>
                <statistic aggregation='Avg' datatype='real'>191.57413191254824</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>977</statistic>
                <statistic aggregation='Stdev' datatype='real'>181.14445383028527</statistic>
                <statistic aggregation='StdevP' datatype='real'>181.1361335742659</statistic>
                <statistic aggregation='Var' datatype='real'>32813.313153472351</statistic>
                <statistic aggregation='VarP' datatype='real'>32810.298886234297</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>756696168.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>datetime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[datetime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>datetime</remote-alias>
              <ordinal>4</ordinal>
              <family>train.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10886</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2011-01-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2012-12-19 23:00:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2012-01-01 21:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>holiday</remote-name>
              <remote-type>16</remote-type>
              <local-name>[holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>holiday</remote-alias>
              <ordinal>5</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>humidity</remote-name>
              <remote-type>16</remote-type>
              <local-name>[humidity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>humidity</remote-alias>
              <ordinal>6</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>89</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>673696.0</statistic>
                <statistic aggregation='Avg' datatype='real'>61.88645967297446</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>100</statistic>
                <statistic aggregation='Stdev' datatype='real'>19.245033277394693</statistic>
                <statistic aggregation='StdevP' datatype='real'>19.244149322072939</statistic>
                <statistic aggregation='Var' datatype='real'>370.37130584802907</statistic>
                <statistic aggregation='VarP' datatype='real'>370.33728313024034</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>45724152.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>registered</remote-name>
              <remote-type>2</remote-type>
              <local-name>[registered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>registered</remote-alias>
              <ordinal>7</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>731</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1693341.0</statistic>
                <statistic aggregation='Avg' datatype='real'>155.55217710821239</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>886</statistic>
                <statistic aggregation='Stdev' datatype='real'>151.03903308192454</statistic>
                <statistic aggregation='StdevP' datatype='real'>151.03209561628543</statistic>
                <statistic aggregation='Var' datatype='real'>22812.789514322696</statistic>
                <statistic aggregation='VarP' datatype='real'>22810.693906246786</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>511720093.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>16</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>8</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temp</remote-alias>
              <ordinal>9</ordinal>
              <family>train.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.81999999999999995</statistic>
                <statistic aggregation='Max' datatype='real'>41.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather</remote-name>
              <remote-type>16</remote-type>
              <local-name>[weather]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather</remote-alias>
              <ordinal>10</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15440.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.4183354767591403</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>3</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.6335368009564879</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.63350770159258141</statistic>
                <statistic aggregation='Var' datatype='real'>0.40136887816618055</statistic>
                <statistic aggregation='VarP' datatype='real'>0.40133200797711516</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26268.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>windspeed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[windspeed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>windspeed</remote-alias>
              <ordinal>11</ordinal>
              <family>train.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>56.996899999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>workingday</remote-name>
              <remote-type>16</remote-type>
              <local-name>[workingday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>workingday</remote-alias>
              <ordinal>12</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.286201' group-percentage='0.178876' measure-ordering='alphabetic' measure-percentage='0.534923' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[cnt:holiday:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>12</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>448</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>442</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>456</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>454</bucket>
            </map>
            <map to='#e15759'>
              <bucket>433</bucket>
            </map>
            <map to='#edc948'>
              <bucket>452</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>13</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>455</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Hot:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:temp:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[max:temp:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:atemp:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:humidity:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:weather:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:windspeed:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:season:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:season:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[med:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[std:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[stp:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[var:count:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:workingday:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[ctd:workingday:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:workingday:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:holiday:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[ctd:holiday:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Hour by hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[season]' derivation='Attribute' name='[attr:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column caption='Holiday' datatype='integer' name='[holiday]' role='measure' type='quantitative' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:ok]' pivot='key' type='ordinal' />
            <column caption='Humidity' datatype='integer' name='[humidity]' role='measure' type='quantitative' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[holiday]' derivation='Sum' name='[sum:holiday:qk]' pivot='key' type='quantitative' />
            <column-instance column='[humidity]' derivation='Sum' name='[sum:humidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='Sum' name='[sum:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp]' derivation='Sum' name='[sum:temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='Sum' name='[sum:weather:qk]' pivot='key' type='quantitative' />
            <column-instance column='[windspeed]' derivation='Sum' name='[sum:windspeed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workingday]' derivation='Sum' name='[sum:workingday:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column-instance column='[datetime]' derivation='Hour-Trunc' name='[thr:datetime:qk]' pivot='key' type='quantitative' />
            <column caption='Weather' datatype='integer' name='[weather]' role='measure' type='quantitative' />
            <column caption='Windspeed' datatype='real' name='[windspeed]' role='measure' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:humidity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:season:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:weather:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:windspeed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:workingday:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]' included-values='in-range-or-null'>
            <min>#2011-01-01 00:00:00#</min>
            <max>#2012-12-19 23:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</column>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:season:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]</rows>
        <cols>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:ok] * [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Hourly Registered and Causal'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[workingday]' derivation='None' name='[none:workingday:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]'>
            <groupfilter function='member' level='[none:workingday:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]</column>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Multiple Values]</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Hourly average count'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of working and non working day'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Non working day trend of regsitered and casual bikers </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[temp]' derivation='None' name='[none:temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workingday]' derivation='None' name='[none:workingday:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:temp:qk]' included-values='in-range'>
            <min>0.81999999999999995</min>
            <max>41.0</max>
          </filter>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]'>
            <groupfilter function='member' level='[none:workingday:ok]' member='0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]</column>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:temp:qk]</column>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]' value='#f28e2b' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Multiple Values]</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column aggregation='None' caption='Season (bin)' datatype='integer' name='[Season (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[season]' peg='0' size='1' />
            </column>
            <column aggregation='None' caption='Temp (bin)' datatype='integer' name='[Temp (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp]' peg='0' size='3.22' />
            </column>
            <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Season (bin)]' derivation='None' name='[none:Season (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Temp (bin)]' derivation='None' name='[none:Temp (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok] / [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]</cols>
        <show-full-range>
          <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Atemp (bin)]</column>
          <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Season (bin)]</column>
          <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Temp (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[temp]' derivation='None' name='[none:temp:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column-instance column='[datetime]' derivation='Weekday' name='[wd:datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Perfect]' />
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Perfect]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Typical hour analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour-Trunc' name='[thr:datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekday Registered and Causal'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[datetime]' derivation='Weekday' name='[wd:datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Registered and Casual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column caption='Holiday' datatype='integer' name='[holiday]' role='measure' type='quantitative' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[holiday]' derivation='Sum' name='[sum:holiday:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[datetime]' derivation='Day-Trunc' name='[tdy:datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[tdy:datetime:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Hourly average count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hourly Registered and Causal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:humidity:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Impact of working and non working day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]' type='filter' />
            <card param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:temp:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Perfect]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Very hot]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Cold:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Hot:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Perfect:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Very cold:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Very hot:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:humidity:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:temp:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Weekday Registered and Causal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Perfect]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Very cold]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Very hot]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:season:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:temp:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Weekly Registered and Casual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hour by hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='6' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Typical hour analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[tdy:datetime:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:temp:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[max:temp:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Atemp (bin):ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hour by hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hourly Registered and Causal' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hourly average count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Impact of working and non working day' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAajklEQVR4nO2dyW8k2X3nPxGR+75x31nFYlV1tdSSeiRLBiwfPB7MAPZlBnMYYHyZ+xzm
      PDBkQH/BHOyLD4YOhn3T0bCMNmwJGFlNVbequlgLtyQzmSRzYWbkvkS8mANLNbZa3UxGdvJV
      Zb7PiUXiG+9HVnxfxvvF7/2e5jiOg0IxpeiyA1AoZKIMoJhqlAEUU40ygGKqUQZQTDXKAIqp
      RhlAMdUoAyimGo/sAMbBYDCgVCoRDAZd6W3bxjCMW9cKIdA0DU3Tbn1sWVqZYzuO83kD9Nom
      z1/sE80scWd13tWFh6HbqnGYK3Hv3l08OhzvvyCYXsFnmZRacHd9CXe3wRXRaJRoNOpKOxgM
      8Hq9t661bRtN09B1dx/MsuK2LAvDMFwbV1bcjuN8/hHIH4oQ8hmIMVdI5PPnLMS9FKptnHaR
      tmeWylmWs0qLkF3H7KkKDcX4+ZwBeu020fQMrYY53pE1HZ/XwBYChI3u9b6e/Qw8Hh0hlAEU
      4+dzBvB4fTgC7m3dGevA8zMJ9s4aLIShYaTRzSyR1ALJkE6l7ycRVOtzxfjRJrEadDAY0O12
      1RrglrQTtQZQKKYJaQZo1sq83D/CEg7gcHZySPGyQaNa5PCkwMR9LCneSqQZQPcGCDttLswO
      2D08oRSlsxx9W8foXFLvy4pMMU1IM4CBTbXZw6NroPtpmxcsr9/BsTp4kovE3D3WKRQ3Qtqb
      4MtKmYEAj+hSr7fIX5i0RQG7WWFgBEgnEwS8aomiGC8qC/QFepUFGh6VBVIo3lGUARRTjTQD
      lE+z7PzyV7QHNgCV/AGPnx8w6NT5x5/9i6ywFFOGNAOcF4sYuqDft3GsLpWOTtgYkD+9IJWK
      ywpLMWVIM0AykcDAolK55LJao25WODg+o9U0OTk6otkdyApNMUVIS4Murt8l079awTtofCsz
      d7Uq13UefE1guMyEKBQ3QZoBNE3H7/f/xveu0mjq5lfcFupOU0w10gzQuLzg2Yv9N8Vwp9k9
      jgslGtUiz57vY8sKTDFVSDNAvnBBROuQq7SgVyVXGZCKhdg/zDE/P4M2ce+nFW8j0gywvr5G
      u92+2vguLGzh8PzlS3AEZyd7XDZVFkgxfqQtgnudJpY/xWIU6k6CpUQZEVgk4bMoVNokwhPZ
      sUXxliHtLkvMLJGYufraB8S2Hr75WWpOTkyK6UNlgRRTzcQ+Z/zZX/0T+cuu7DBc8Whjlv/9
      J78nO4ypQJoBauUzjs5qPNxc4PnLAzyRFI+21njyyQ7dvkMsHqPRqDG3/h6rs7EbX7/bt+j0
      rDFEPn56/Xcz7ncReWuAzALJVg9fKMZMOok/frUg8Og6tiMI+g0uqwLD477npEJxHdIMUC4c
      s7+3j91pkas0WTPCeOhjOw6G7tDsWPi9Bv1eHwjLClMx4UgzQGZxjT9YXAPgX/egS3wj9ZVc
      PxkJ0LXdrfEdB1zu7htJ++teMPFIwOUFFDdF7Qn+Ar3aEzw87/Ke4InNAv1k55CO5e4/RAjh
      +iYcRXs1F2muP0GGGfu99Vk+2Bpf2/t3DWkGaNbKFM0eG8sz7D7bJb18h/lUhHLhhL43TsJv
      8WL/lO1H7xH23TzMjx4fkau8m2nQcfKfv+8oA/wrpL0IC4TjaM6ASuGEjvAQ8F19jMUTSfr9
      HhcXVR5sLVC4GHObdsVUI80AHq8XTQPD8JCaneP46ADQ3jzPaY5Np9vH8KiX1YrxIa8rROGY
      SqWCFcpAo8Ty2gY1s8ZxNkuldEFqYZFipcPqXEJWiIopYGKzQI9f5HAMnyu9tEPbhIAxH5K3
      mI6yOvf5rhvTmgWaWANUag2CoZArvWXZeFy+gR5FK4RAQ0PT3d1IsuK2rdfGc5m9cju23+PB
      0J13Mw0qhE2vbxHwe6mbdcKxOB4dOq0WA0cnEvRRb7SIxmIYLm6IH/7on1UWaML549+9x5/8
      4fsjXUOaARrVCifFKvNRL+W2jV6ps725glm75DR/xsLaOq3Lc6rdNTbm1TpAMR6kLYLj6Vmi
      IT/xZJp+u0XVrIGmEfR5EIaPaDSE7o+xkHb3NlehGAapWaDsUZZyo4uw+ywvr1GrVSmVK2gI
      To+OqNSq1FvqMUYxPqQWw/3+62K4xfn/vwcykUh+Jde/s5gkEXfXXMVxHNcZjVG1o5RCyIzb
      rXYU/VfxdDCxWSBVDHd72nc5DTqxxXB/+9EzzK5wpRXCQXeZihxF++upyH0xnJy4R9EOo/8f
      /+mbJKLjKRGXtyHm7IRs/oLltXXOT0+IZZbZXJnj8OVTmgMPDx7e58XTx2xsf51I4OZhfrp/
      rtKgE8J/+4P3STAeA0hbBKfnllicSeILx9lcW8Hr0QAHs2biC4RoX57RczzYlrtZXKEYBmkG
      KGT36HkiGO0y2WKDZDxGv99nZWMLWiX2ciVq5TOKl3VZISqmAGmPQJFEikuzhQgniPl7tLs9
      tIAXv9cgsbjJ9kyKQf8+uqEODFaMj4nNAmULZbz+oCu9bdmuu1GMoh21FkhW3KMUAA4z9lIm
      ivcLfq6yQF/AwBII3V1/HduyMVzOC6NohXDQYDQDSIjbtgWG7bguhrtu7MOz6pdrhzDuTDxM
      Kvb5CVGaAQbdJrmzCqsrCxwfZYlm5plNRMgdH9GxYG11hfPTU2aXVgn6bj67/PmPP1ZZIMUb
      /vt/+Br/5fsPP/d9aYvgdrtHWOuSO84yCKZJREKAxszcAna3zenxId5oEo/hPr+sUFyHNAN4
      DWhqEZYW5uiUjnl1mANNw6Pb+KNp7G6H85NXZPMVWSEqpgBpj0AX52eYrT5Bn44GRKMRaqaJ
      1uswv7QACS8v9k+IJ1RXOMX4mNgs0F///Sc0eu70cvsC4bqmRlbcwnHQRyiGu424v/veMt/a
      Xvw335voLZGqGO72tKoY7i3kL368Q6nhLg3q4KC5zOmNqgWkjT2aFtzmQWXFDRINUC6ckM0V
      yMwvUSpdkJhZZGt1jhefPaEjfMwmA5xdVFi68x4LqZuvA06KpkqDKq5FmgFSswu0On0CXrCF
      QNhXs58Qgm79gqp3Ecu2mbjnM8VbhTQDHL54SpMAMUcQCoXpdJo0Wh3SmQztAXg0i0jIR6vV
      BRefAArFMEgzwOrWQ/oDC38gyKDXxRcIgiPwe2ZJzCziNTQ63T7BkLt6HoViGCY2C9RotgiF
      I670lmXh8bibG0bRXhXDgeYyCyQrbtuyMFxqRx17FO1EZ4F2syVszV1naSFsdN1tRad7reNc
      bf7RNLc5cTlxX2l13GaBZMUtNQtkls84Pq9xb2uD7P4rMst3ycSDXF6ccmEO2FzJsH90ytb2
      PXzGzW+Iv/nomcoCKa5FWi2QPxQl7rUp1losr29SKZ4D4AnGiOgdXh4WWJqNklPnAyjGiLzm
      +45gYAs0YXN2XmbzzgYA7XqVQHqFqE/D6/PgiIlboijeIqQZoF67pNEHrzPArFXIF4rUajVq
      1UvyuWMSmRR7hyWWfksrb4Xiq2Jis0B/9/MX9Gz3WxNVMdztaGWO7aCK4b5Qr4rhhkcVw72F
      /PBHP6VQdVcPLbM464p3q6hstN95SovhSoUsR9lTVtaWeH5YZHt7i6XZJL3mJf/4i11+59EG
      B9kTMmvvsTYXu/H1W90+9bbLDQGKqUHe+QCJJEKArnsIBXT6gwGOIzjOF1mcSxFNZUimZkjH
      VSmEYnxI+wSolEp4vRpmzyHg0Wm329RqJprTp3BaRO81adgGkUyfSEA1x1KMh4ldBP/pX/6D
      6zXA1bP4KM/xsjpZqLhvysQaQGWBbk+rskBvIR89PqLr+j2AzGI49+cEyyuGE6/7+79bcUvN
      Al1e5DkuXHLnzhrZw0NmV+4wn45RuchxVuny4OFdjvdfsrCyRdB/81/wJzuHqhhOcS3SskCh
      aAy/ZlEulcHrx6zVwLE5yuaJRiP0zDIXl3X6A3fnfCkUwyDNAMLRSSdCVOotEqk0vW4bAF8g
      hN0u8fizA5rmpTofQDFWpD0CdZs1LpoO7z/Y4mDvFUtrW9TqTTZXF8iVWnzve+/TbTfx+EKy
      QlRMAW+yQI7jMCkJIcuy+Hj3BKG5zMYIG8PlwmoUrXBenw/gchEsK+5RtDLH/jfFcL1ej06n
      4+pCbxu2bdPv9wkGXR6QMcKBD6NohRBo2ggGkBT3yAdkSBr7C1sjnh88oRla4+7C+GrxO40q
      h/kS29tbeHTI7j0nkF7GN6hTbsPWxrLr1xvqPcDtaifqPcCgU6fVEwx8482+nBYuWEoGOb1s
      sRpq0vHN0zk/QdN9xHw2Zs8h4VdnAyjGy+emmoZZ5bJ6ydl5cbxd2TQNj6FfHQ4tHPTXM4im
      6+i6hpiQ9Yji7eZznwCp+TVSs0v07FEqvK9nYTbFQb7MvTtJGqQxGi8JZlbwDWqU217uB+Rt
      V1ZMD789Dap78I/5/gsnZvhaYgaAABB78P7rnySYGe/QCsUb1DSrmGomthjuz/7qn8hfqlog
      2fyf//kfmU2+vc2NpW6JPDzKsfrehyxENZ48eU5P8zEb1jkv13j4re8S9bm/frdv0em5OyBD
      8dXxtr9clWaAeCKJ4xQI+AwwvCwuZOhpYVIhGBhhQmoTmOIWkL4lsmHWMAYaj58esLK+Rn7v
      BF8szcASGF61RFGMF2kGWFi7y8La3Tf//sN///tXX2xtfCXXT0YCdG23DarA7aGHo2hH7Ioi
      Le4v047SMOs2UFsiv0CvSiGGZ6JKISaFn+wc0rHerRaDV3OR5nomvm7s7dUMH/7GWbnTjjQD
      tOsVXh0U2H70kKDXoGsWyZmCO0spdl8e8ejh9kjX/+jxkdoS+Rv80ffuKQP8BtIMcHx0hC+c
      xNA1wOG4UEYYBhf5Js3+QFZYiilDmgE8vgDxsMNRocZapMN5pU6r0yYd9lCqtmje31YNsRRj
      R5oBNjY3eHmQ4866l74W5fd+d5FGo0EsFsOs19XNr7gVJjYL9PhFDsdw9ypZ2g4lIWCMO8Lm
      UxHW5xO/9WcqCzRhrM0nCIbcbai3LBuPx91NPIr26phUDU13dyMNM7bZ+u2JgSutu01QtmUT
      CQXwed1vi5SFNANYgx6t7oBYJIymaXTbTWzNS8Cj0Wz3iMWjI+1H+OGP/lllgW6R//Vfv8v3
      P1iTHcaNkfaa7nDvJWfZA4qNHthtPnu2R6vd5uWLXWr1BkJWYIqpQpoB0skErcYltWYP2pdU
      u4Jc/pRmo0nx/JRWV3WEU4wfaQbQdB3bG2cpplE30ixEHDw+P/NzGXTD8/r9gEIxXqStAVJz
      y3x7bvnNvx9948M3X69+Bde/s5gkEXf3KeI4juuMxqjaUUohZMadiPhdaWUzsWlQVQx3e1qV
      Bn0L+duPnmF23S2lhXBe97u/Xe2vpyL3xXBy4h5FK3Nsx5H4CFQrn3Fe67GxkOT5q31imWU2
      l2c5fPWMWtthcS5OvlBk/d57ZGI3b3H46f65SoMqrkXaIjiRWSDgBV8oxubaCl7PVVFcr9dH
      2H06nR6OYzOwVEJUMT6kGaDXadGoNzBLBbLFBsl4jH6/x8AxiPk1ymaH+Zkk9WZbVoiKKUDa
      I1C/2yESiWAbQWL+Pu1uDy3gZXN9mXoXNhIhzouXbC6mZYWomAImNguULZTx+l22R7dsDJf1
      PKNoR60FkhX3yO3RJcXNJGeBBpZA6O76AtmWjeFyXhhFK4SDBqMZQELcti0wbMf1Zn5ZcSMz
      C2QPetSaXdLJGOf5E/zxWZLRIL12g67wEPFr5M9KLC8vu3or/Oc//lhlgRTXIs0ArVaLcqWK
      f1CnLvys+gzAoVmvYVpezE4Nw+chV6qzPje+gzoU0420LFAskcLvNWh1epjFU17sHwMa6XQG
      XdOw8DA/l2TQU/uDFeNDmgHKhWPyuTxaOIHX0InHY9TMGsdHB+RzJ0SiQR4/yTI/q2Z/xfiY
      2CzQX//9JzR67vRy+wLhuqZGVtzCcdBdt8OT+Pdmgg2giuFuT6uK4d5C/uLHO5Qa7tKgDg5u
      D4gaVQtIG3s0LbjNg8qKGyQaoFY+I19usTYT5tXxGTMLq6zOp8nuP6dY7bC6Ms9pPs/85nss
      pSM3vv5J0VRpUMW1SC2GiwQ9OMLBcTTOzs9A00gmEggHkjNzzGUyhFR/IMUYkWYAs3zOyckJ
      fd1PLOQlkUjRaDQwmy282oBXzz7jotEFoapBFeND2iNQKJbgm9/4Jj6/n2AgSDAURNg2voVl
      ZhZW8ejQ6w/wBUY4J0mhuIaJzQI1mi1C4ZuvHeAqq+HxuJsbRtFeFcNdNQy47bFH0dqWheFS
      O+rYo2gnOgu0my1ha6YrrRA2uu62otO91nGuHvc0zW1OXE7cV1odt1kgWXFLzQJ1GpfsH59z
      d2uT4/1XZJbvkomHuMgfcVHr8uDhfcpneVKzi/hdtNz7m4+eqSyQ4lqkLYIFXpaSAS4uWyyv
      b1IpngMOl2aTzc11nI7JfvaYbk81yFKMD3nl0P0WLT3KctLP0WmZzTsb4EAiFmV/9wmdgU2r
      1aB4WSceycgKUzHhSDNA3TQp1VrQT2PWKuQLQZIRP8Ie4Amn+HfbW3SaVbyBmKwQFVPAxGaB
      /u7nL+jZ7rcmqmK429HKHNvBmVwDqGK429OqYri3kB/+6KcUqu7qoWUWZ13xbhWVjfY7T2kx
      XLlwQvYkx8LyEi+Pimxvb7E0E2fvxTNOTovc3drgvGjy4NEjYsGbO7zV7VNvu9wQoJgapBkg
      mZmh1uoTDvgIBXT6gwFoOnfubYMvQtes4jUcWu2eKwMoFMMgzQB7u08xLQ+hSJiAR6fdblMz
      TUS7Rnp+Geo6jcIF3W4PcFfSoFBcx8Qugv/0L//B9Rrg9WY5CdpRUXHflIk1gMoC3Z5WZYHe
      Qj56fETX9XsAmcVw7s8JllcMJ1736H+34paaBTLL5xzmLtjYXOPk6IjZlTvMp6Lkj/Zo2H6W
      MkEOj8/Y3H5ALHjzPQE/2TlUxXCKa5FWDBeMJlnORCiXKuD1Y9Zq4NiUqiadyzzHhQoew6He
      UqlMxfiQZoBGtYQIzxDzayRSaXrdNugG9+8/wO/zIRyHdDJKS+XyFWNEmgEG/R6n2X30SJpG
      +ZyllVVqZp1q+ZzI3Drb6wuUql1W5xOyQlRMARObBfp49xihudtPbAsbw+XCahStcF6fD+By
      ESwr7lG0MsdWxXBfoldp0OF5l9Og0h6BrEGPRrOFcAStZuPNYXiDfo9Wu4MQNs1Wiwn0p+It
      QloatFG7JHd8TGxhnX7LpC88PLq/SfHslFK5TCAcp9dpklrZZiWjSiEU40HaJ0A4HKJvaURj
      UXweDysrS4BGLBYhMbuC1+Ph0cNNum2Vy1eMD2kGqJRKaAZUCjnyxQqXVZNarcreyz2q1QpB
      v8HHn7wilVKzv2J8qEXwF+jVInh41CJYoXhHUQZQTDXSDFAqZNn5eAezVub//nyH02IVADHo
      svP4V9SKBX658zElsyMrRMUUIM0A8UQS3RG0zCodAaFQEByH09wJeH3EZ+ZZXcio9wCKsSLt
      PUB3IFhIR6iJMB/cT3F8eEjk/ialcpmzkkk2qOMEEiyH/bJCVEwB0gygOzYdT5S7SxkKuVPu
      bd+jN+jxzW9/j/vtNla3xUWlRrsXx+eiOa5CMQzSDBBJZIi8LvRc29i4+sJ/FU4oFIJQiFhq
      RlJ0imlBZYEUU400A7QbNbInp9i2Rf74mHb/6kjTfqfJSf4MAdRrVQa2OiNMMT7knQ/ggNMq
      8+L5Szq6h6ODI3AEe/uHxCJh7F6Lx7/6lFbH3Vm/CsUwSFsD+DwajbZFKBWnXjonFJ8FBO1G
      nZcvd7H6Pbr9PpVqg0QkLStMxYQjzQCVUomB4xD0+6gDPp+XWr3F0tI8F9U273/wIS2zSDCi
      zgdQjA9VDPcFelUMNzzvcjHcm0+AbrdLpzMZZQdCCGzbxrLcrR9s28YwXO5RHUErhEDTRtgT
      LDHuUQ7IkBW340zonmDHcRBCuP7DyDwnGHB9M0k7J9i+OibVrXFlnhM8sQYA90cNOY4jTQsq
      7lvVTqIBFIphMX7wgx/8QHYQ46BROuXxk120QIzYkAV1p9lXPH/2Cjywu/v8ShsaTiusLj/7
      6c+IhAM8ffYZlhYkEQ0NpR10m3zy+BMcb5Djl8/IFWvMz80y1MTmCHaf/JLsyTnCbrO7+4pg
      IkPIf/1jQbVUYD93TtJn8y+ffEZf6OT2n1OoNJmfy3xpq9vGZZHdgxwzUT9PPntGudGleLJH
      9rzG4sLsl2qFPWD3s8d4wnMYVp2f/vwJQaPHs2e7+OLzhP1f/uhaKmQ5uagT1rt88uQF/qCf
      3adPqTQHzGaSXzr2oFPnF7/aZWkuw6c7v5jcUgiz3uWb3/k6HbM+tGZufpnUzAzNdp/vfOsD
      2k1zaO3Z6SmpmTSVeocPvvFtBu3LobWd2jkt20uvdUkws85szM/AHvaDWUMIB1sImn34zte3
      qDVaQymTM4tEA14qpQZf/86H9GtVkgsrpAMG16UPoqlZkpEARiDC8vwsyUSUUDzDYsTPdc0s
      dcPL6vIijhCcFkrMJGO0eoIPf+cb1Iula+OemV8m6NUpn12A18AsVlm694CwbnPdX80bjLGQ
      SaJpGsIRk2uAUFDn052neELDzcIATz7dodVpEzJg59OneP3DagWddpvT4yzWoM+TJ4/BO/xm
      fn80RcQLZrNH4+KI82oLz5DrdweHgWWhOz2wBuw83ScSDAylrZznODg4QOgOT3Y+QQuGKJ0e
      U2z1rn1BZJbPODg4IHf4iid7Ofp9m3rlnLzZ4rp+fLbVY//VHkdHRzRbTbJHh/StPp/ufEog
      kbr2Nz4/zXJwcIAeimDg0LF65F69oN4T1zZo77VMDg8OyOZPsSx9ctcAjuO8SZENu0iyLQvh
      OBgeD+KGWgBHCNC0G4/L61g13QBH4GgaxtCZIAdhC4QDhqHfaGxh29hCYBgehLjSCWGDpl87
      /q+1uq5fpW91HR1w0DCML9c6joNlWWiahuHx4LxO/w4X+9XfSgjnTdy6YeC8/vtdnVPwJWoh
      sGwbTdfR1CJYMe1M7COQQjEMygCKqUYZQDHVKAMophplAMVUowygmGqUARRTjTKAYqr5fzun
      ylsGKb/YAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Typical hour analysis' width='192'>
      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
      Ggo+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekday Registered and Causal' width='192'>
      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
      QgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weekly Registered and Casual' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
