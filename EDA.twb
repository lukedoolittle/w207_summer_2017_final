<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0515.2100                               -->
<workbook original-version='10.3' source-build='10.3.0 (10300.17.0515.2100)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='train' inline='true' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.0xs6g5n1ralzpr116475m1q9y8w9'>
            <connection class='textscan' directory='D:/MIDS/W207/GroupProject' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0xs6g5n1ralzpr116475m1q9y8w9' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='datetime' name='datetime' ordinal='0' />
            <column datatype='integer' name='season' ordinal='1' />
            <column datatype='integer' name='holiday' ordinal='2' />
            <column datatype='integer' name='workingday' ordinal='3' />
            <column datatype='integer' name='weather' ordinal='4' />
            <column datatype='real' name='temp' ordinal='5' />
            <column datatype='real' name='atemp' ordinal='6' />
            <column datatype='integer' name='humidity' ordinal='7' />
            <column datatype='real' name='windspeed' ordinal='8' />
            <column datatype='integer' name='casual' ordinal='9' />
            <column datatype='integer' name='registered' ordinal='10' />
            <column datatype='integer' name='count' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[datetime]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>20</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[holiday]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>holiday</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workingday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[workingday]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>workingday</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>temp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atemp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[atemp]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>atemp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[humidity]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>humidity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>windspeed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[windspeed]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>windspeed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>casual</remote-name>
            <remote-type>20</remote-type>
            <local-name>[casual]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>casual</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>registered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[registered]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>registered</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Atemp (bin)' datatype='integer' name='[Atemp (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[atemp]' peg='0' size='3.31' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Season (bin)' datatype='integer' name='[Season (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[season]' peg='0' size='1' />
      </column>
      <column aggregation='None' caption='Temp (bin)' datatype='integer' name='[Temp (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[temp]' peg='0' size='10' />
      </column>
      <column aggregation='None' caption='Windspeed (bin)' datatype='integer' name='[Windspeed (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[windspeed]' peg='0' size='10' />
      </column>
      <column caption='Atemp' datatype='real' name='[atemp]' role='measure' type='quantitative' />
      <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
      <column caption='Holiday' datatype='integer' name='[holiday]' role='measure' type='quantitative' />
      <column caption='Humidity' datatype='integer' name='[humidity]' role='measure' type='quantitative' />
      <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
      <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
      <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
      <column caption='Weather' datatype='integer' name='[weather]' role='measure' type='quantitative' />
      <column caption='Windspeed' datatype='real' name='[windspeed]' role='measure' type='quantitative' />
      <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
      <column-instance column='[season]' derivation='Attribute' name='[attr:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[casual]' derivation='Avg' name='[avg:casual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[registered]' derivation='Avg' name='[avg:registered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp]' derivation='Avg' name='[avg:temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[casual]' derivation='Count' name='[cnt:casual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[holiday]' derivation='Count' name='[cnt:holiday:ok]' pivot='key' type='ordinal' />
      <column-instance column='[holiday]' derivation='Count' name='[cnt:holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[registered]' derivation='Count' name='[cnt:registered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[season]' derivation='Count' name='[cnt:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[workingday]' derivation='Count' name='[cnt:workingday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[holiday]' derivation='CountD' name='[ctd:holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[workingday]' derivation='CountD' name='[ctd:workingday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hot]' derivation='InOut' name='[io:Hot:nk]' pivot='key' type='nominal' />
      <column-instance column='[temp]' derivation='Max' name='[max:temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Median' name='[med:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Season (bin)]' derivation='None' name='[none:Season (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Temp (bin)]' derivation='None' name='[none:Temp (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Windspeed (bin)]' derivation='None' name='[none:Windspeed (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[temp]' derivation='None' name='[none:temp:ok]' pivot='key' type='ordinal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:qk]' pivot='key' type='quantitative' />
      <column-instance column='[windspeed]' derivation='None' name='[none:windspeed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Stdev' name='[std:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='StdevP' name='[stp:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[atemp]' derivation='Sum' name='[sum:atemp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[holiday]' derivation='Sum' name='[sum:holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[humidity]' derivation='Sum' name='[sum:humidity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[season]' derivation='Sum' name='[sum:season:qk]' pivot='key' type='quantitative' />
      <column-instance column='[temp]' derivation='Sum' name='[sum:temp:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weather]' derivation='Sum' name='[sum:weather:qk]' pivot='key' type='quantitative' />
      <column-instance column='[windspeed]' derivation='Sum' name='[sum:windspeed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[workingday]' derivation='Sum' name='[sum:workingday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[count]' derivation='Var' name='[var:count:qk]' pivot='key' type='quantitative' />
      <group name='[Cold]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='5.7400000000000002' />
          <groupfilter function='member' level='[none:temp:ok]' member='6.5600000000000005' />
          <groupfilter function='member' level='[none:temp:ok]' member='7.3799999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='8.1999999999999993' />
          <groupfilter function='member' level='[none:temp:ok]' member='9.0199999999999996' />
          <groupfilter function='member' level='[none:temp:ok]' member='9.8399999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='10.66' />
        </groupfilter>
      </group>
      <group name='[Hot]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='25.420000000000002' />
          <groupfilter function='member' level='[none:temp:ok]' member='26.239999999999998' />
          <groupfilter function='member' level='[none:temp:ok]' member='27.059999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='27.879999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='28.699999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='29.52' />
          <groupfilter function='member' level='[none:temp:ok]' member='30.34' />
          <groupfilter function='member' level='[none:temp:ok]' member='31.16' />
          <groupfilter function='member' level='[none:temp:ok]' member='31.98' />
          <groupfilter function='member' level='[none:temp:ok]' member='32.799999999999997' />
          <groupfilter function='member' level='[none:temp:ok]' member='33.619999999999997' />
          <groupfilter function='member' level='[none:temp:ok]' member='34.439999999999998' />
        </groupfilter>
      </group>
      <group name='[Perfect]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='10.66' />
          <groupfilter function='member' level='[none:temp:ok]' member='11.48' />
          <groupfilter function='member' level='[none:temp:ok]' member='12.300000000000001' />
          <groupfilter function='member' level='[none:temp:ok]' member='13.119999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='13.94' />
          <groupfilter function='member' level='[none:temp:ok]' member='14.76' />
          <groupfilter function='member' level='[none:temp:ok]' member='15.58' />
          <groupfilter function='member' level='[none:temp:ok]' member='16.399999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='17.219999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='18.039999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='18.859999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='19.68' />
          <groupfilter function='member' level='[none:temp:ok]' member='20.5' />
        </groupfilter>
      </group>
      <group name='[Very cold]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='0.81999999999999995' />
          <groupfilter function='member' level='[none:temp:ok]' member='1.6400000000000001' />
          <groupfilter function='member' level='[none:temp:ok]' member='2.46' />
          <groupfilter function='member' level='[none:temp:ok]' member='3.2800000000000002' />
          <groupfilter function='member' level='[none:temp:ok]' member='4.0999999999999996' />
          <groupfilter function='member' level='[none:temp:ok]' member='4.9199999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='5.7400000000000002' />
        </groupfilter>
      </group>
      <group name='[Very hot]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:temp:ok]' member='35.259999999999998' />
          <groupfilter function='member' level='[none:temp:ok]' member='36.079999999999998' />
          <groupfilter function='member' level='[none:temp:ok]' member='36.899999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='37.719999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='38.539999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='39.359999999999999' />
          <groupfilter function='member' level='[none:temp:ok]' member='41.0' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:/ghangam/My Documents/My Tableau Repository/Datasources/train_w207.tde' schema='Extract' tablename='Extract' update-time='07/14/2017 04:02:07 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='10886' timestamp-start='2017-07-14 04:02:07.755' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10886.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10886.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>atemp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[atemp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>atemp</remote-alias>
              <ordinal>1</ordinal>
              <family>train.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.76000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>45.454999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>casual</remote-name>
              <remote-type>2</remote-type>
              <local-name>[casual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>casual</remote-alias>
              <ordinal>2</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>309</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>392135.0</statistic>
                <statistic aggregation='Avg' datatype='real'>36.021954804335842</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>367</statistic>
                <statistic aggregation='Stdev' datatype='real'>49.960476572649526</statistic>
                <statistic aggregation='StdevP' datatype='real'>49.958181807631085</statistic>
                <statistic aggregation='Var' datatype='real'>2496.0492193662622</statistic>
                <statistic aggregation='VarP' datatype='real'>2495.8199295243217</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>41294965.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>count</remote-name>
              <remote-type>2</remote-type>
              <local-name>[count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>count</remote-alias>
              <ordinal>3</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>822</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2085476.0</statistic>
                <statistic aggregation='Avg' datatype='real'>191.57413191254824</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>977</statistic>
                <statistic aggregation='Stdev' datatype='real'>181.14445383028527</statistic>
                <statistic aggregation='StdevP' datatype='real'>181.1361335742659</statistic>
                <statistic aggregation='Var' datatype='real'>32813.313153472351</statistic>
                <statistic aggregation='VarP' datatype='real'>32810.298886234297</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>756696168.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>datetime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[datetime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>datetime</remote-alias>
              <ordinal>4</ordinal>
              <family>train.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10886</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2011-01-01 00:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2012-12-19 23:00:00#</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2012-01-01 21:00:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>holiday</remote-name>
              <remote-type>16</remote-type>
              <local-name>[holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>holiday</remote-alias>
              <ordinal>5</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>humidity</remote-name>
              <remote-type>16</remote-type>
              <local-name>[humidity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>humidity</remote-alias>
              <ordinal>6</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>89</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>673696.0</statistic>
                <statistic aggregation='Avg' datatype='real'>61.88645967297446</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>100</statistic>
                <statistic aggregation='Stdev' datatype='real'>19.245033277394693</statistic>
                <statistic aggregation='StdevP' datatype='real'>19.244149322072939</statistic>
                <statistic aggregation='Var' datatype='real'>370.37130584802907</statistic>
                <statistic aggregation='VarP' datatype='real'>370.33728313024034</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>45724152.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>registered</remote-name>
              <remote-type>2</remote-type>
              <local-name>[registered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>registered</remote-alias>
              <ordinal>7</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>731</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1693341.0</statistic>
                <statistic aggregation='Avg' datatype='real'>155.55217710821239</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>886</statistic>
                <statistic aggregation='Stdev' datatype='real'>151.03903308192454</statistic>
                <statistic aggregation='StdevP' datatype='real'>151.03209561628543</statistic>
                <statistic aggregation='Var' datatype='real'>22812.789514322696</statistic>
                <statistic aggregation='VarP' datatype='real'>22810.693906246786</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>511720093.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>16</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>8</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temp</remote-alias>
              <ordinal>9</ordinal>
              <family>train.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.81999999999999995</statistic>
                <statistic aggregation='Max' datatype='real'>41.0</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather</remote-name>
              <remote-type>16</remote-type>
              <local-name>[weather]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather</remote-alias>
              <ordinal>10</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15440.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.4183354767591403</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>3</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.6335368009564879</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.63350770159258141</statistic>
                <statistic aggregation='Var' datatype='real'>0.40136887816618055</statistic>
                <statistic aggregation='VarP' datatype='real'>0.40133200797711516</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26268.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>windspeed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[windspeed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>windspeed</remote-alias>
              <ordinal>11</ordinal>
              <family>train.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>56.996899999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>workingday</remote-name>
              <remote-type>16</remote-type>
              <local-name>[workingday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>workingday</remote-alias>
              <ordinal>12</ordinal>
              <family>train.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>10886</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.264055' group-percentage='0.224872' measure-ordering='alphabetic' measure-percentage='0.511073' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[cnt:holiday:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>12</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>448</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>442</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>456</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>454</bucket>
            </map>
            <map to='#e15759'>
              <bucket>433</bucket>
            </map>
            <map to='#edc948'>
              <bucket>452</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>13</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>455</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Hot:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season (bin):ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:temp:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[max:temp:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:temp:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:atemp:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:humidity:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:weather:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:casual:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:casual:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:registered:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:registered:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:windspeed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:windspeed:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:season:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:season:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[med:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[std:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[stp:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[var:count:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:workingday:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[ctd:workingday:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:workingday:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:holiday:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[ctd:holiday:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Windspeed (bin):ok]' type='palette'>
            <map to='#2ca02c'>
              <bucket>2</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>1</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>5</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Temp (bin):ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>0</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>7</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>11</bucket>
            </map>
            <map to='#35628f'>
              <bucket>10</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>6</bucket>
            </map>
            <map to='#406d9b'>
              <bucket>9</bucket>
            </map>
            <map to='#4979a7'>
              <bucket>8</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>5</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>4</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>1</bucket>
            </map>
            <map to='#d62728'>
              <bucket>3</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Impact of seasons' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Season (bin)' />
        <param name='target' value='Impact of seasons' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Hour by hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[season]' derivation='Attribute' name='[attr:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column caption='Holiday' datatype='integer' name='[holiday]' role='measure' type='quantitative' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:ok]' pivot='key' type='ordinal' />
            <column caption='Humidity' datatype='integer' name='[humidity]' role='measure' type='quantitative' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[holiday]' derivation='Sum' name='[sum:holiday:qk]' pivot='key' type='quantitative' />
            <column-instance column='[humidity]' derivation='Sum' name='[sum:humidity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[season]' derivation='Sum' name='[sum:season:qk]' pivot='key' type='quantitative' />
            <column-instance column='[temp]' derivation='Sum' name='[sum:temp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='Sum' name='[sum:weather:qk]' pivot='key' type='quantitative' />
            <column-instance column='[windspeed]' derivation='Sum' name='[sum:windspeed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workingday]' derivation='Sum' name='[sum:workingday:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column-instance column='[datetime]' derivation='Hour-Trunc' name='[thr:datetime:qk]' pivot='key' type='quantitative' />
            <column caption='Weather' datatype='integer' name='[weather]' role='measure' type='quantitative' />
            <column caption='Windspeed' datatype='real' name='[windspeed]' role='measure' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:count:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:humidity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:season:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:temp:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:weather:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:windspeed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:workingday:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]' included-values='in-range-or-null'>
            <min>#2011-01-01 00:00:00#</min>
            <max>#2012-12-19 23:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</column>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:season:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]' num-steps='4' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]</rows>
        <cols>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:ok] * [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Hourly Registered and Causal'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workingday]' derivation='None' name='[none:workingday:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:count:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]'>
            <groupfilter function='member' level='[none:workingday:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]</column>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Multiple Values] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hourly average count'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of seasons'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Impact of seasons (</run>
            <run fontalignment='1' fontcolor='#000000b2' fontname='Atlas Grotesk,sans-serif' fontsize='11'> 1 = spring, 2 = summer, 3 = fall, 4 = winter)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column aggregation='None' caption='Season (bin)' datatype='integer' name='[Season (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[season]' peg='0' size='1' />
            </column>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Season (bin)]' derivation='None' name='[none:Season (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[workingday]' derivation='None' name='[none:workingday:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]'>
            <groupfilter function='member' level='[none:workingday:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Impact of temperature on demand</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column aggregation='None' caption='Temp (bin)' datatype='integer' name='[Temp (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[temp]' peg='0' size='10' />
            </column>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temp (bin)]' derivation='None' name='[none:Temp (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[workingday]' derivation='None' name='[none:workingday:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]'>
            <groupfilter function='member' level='[none:workingday:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='100' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok]' value='Temp celsius (bin)'>
              <formatted-text>
                <run>Temp celsius (bin)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1631' />
                <format attr='maxwidth' value='1631' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of weather'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Impact of weather on demand&#10;(</run>
            <run fontalignment='1' fontcolor='#000000b2' fontname='Atlas Grotesk,sans-serif' fontsize='11'>1: Clear, 2: Mist + Cloudy 3: Light Snow 4: Heavy Rain)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:qk]' pivot='key' type='quantitative' />
            <column-instance column='[workingday]' derivation='None' name='[none:workingday:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Weather' datatype='integer' name='[weather]' role='measure' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]'>
            <groupfilter function='member' level='[none:workingday:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]' num-steps='5' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Impact of windspeed'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Impact of windspeed on demand</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column aggregation='None' caption='Windspeed (bin)' datatype='integer' name='[Windspeed (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[windspeed]' peg='0' size='10' />
            </column>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Windspeed (bin)]' derivation='None' name='[none:Windspeed (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[workingday]' derivation='None' name='[none:workingday:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Windspeed' datatype='real' name='[windspeed]' role='measure' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]'>
            <groupfilter function='member' level='[none:workingday:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Windspeed (bin):ok]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Windspeed (bin):ok]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Windspeed (bin):ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:qk]</cols>
        <show-full-range>
          <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Windspeed (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Impact of working and non working day'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Non working day trend of regsitered and casual bikers </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column-instance column='[workingday]' derivation='Count' name='[cnt:workingday:qk]' pivot='key' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour' name='[hr:datetime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[workingday]' derivation='None' name='[none:workingday:qk]' pivot='key' type='quantitative' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Workingday' datatype='integer' name='[workingday]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[cnt:workingday:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]' included-values='in-range'>
            <min>0</min>
            <max>0</max>
          </filter>
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</column>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]' value='#f28e2b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Multiple Values]' value='' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Multiple Values]</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[hr:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column aggregation='None' caption='Season (bin)' datatype='integer' name='[Season (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[season]' peg='0' size='1' />
            </column>
            <column aggregation='None' caption='Temp (bin)' datatype='integer' name='[Temp (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[temp]' peg='0' size='10' />
            </column>
            <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Season (bin)]' derivation='None' name='[none:Season (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Temp (bin)]' derivation='None' name='[none:Temp (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Season' datatype='integer' name='[season]' role='measure' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok] / [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]</cols>
        <show-full-range>
          <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Atemp (bin)]</column>
          <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Season (bin)]</column>
          <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Temp (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[temp]' derivation='None' name='[none:temp:ok]' pivot='key' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column caption='Temp' datatype='real' name='[temp]' role='measure' type='quantitative' />
            <column-instance column='[datetime]' derivation='Weekday' name='[wd:datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Perfect]' />
          <slices>
            <column>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Perfect]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Typical hour analysis'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column-instance column='[count]' derivation='Avg' name='[avg:count:qk]' pivot='key' type='quantitative' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Hour-Trunc' name='[thr:datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:count:qk]</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekday Registered and Causal'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[datetime]' derivation='Weekday' name='[wd:datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekly Registered and Casual'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1v0lqbz15kbtqt183r7k00b8rnzg' />
          </datasources>
          <datasource-dependencies datasource='federated.1v0lqbz15kbtqt183r7k00b8rnzg'>
            <column caption='Casual' datatype='integer' name='[casual]' role='measure' type='quantitative' />
            <column caption='Datetime' datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column caption='Holiday' datatype='integer' name='[holiday]' role='measure' type='quantitative' />
            <column caption='Registered' datatype='integer' name='[registered]' role='measure' type='quantitative' />
            <column-instance column='[casual]' derivation='Sum' name='[sum:casual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[holiday]' derivation='Sum' name='[sum:holiday:qk]' pivot='key' type='quantitative' />
            <column-instance column='[registered]' derivation='Sum' name='[sum:registered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[datetime]' derivation='Day-Trunc' name='[tdy:datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:holiday:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:casual:qk] + [federated.1v0lqbz15kbtqt183r7k00b8rnzg].[sum:registered:qk])</rows>
        <cols>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[tdy:datetime:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Hourly average count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hourly Registered and Causal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:humidity:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Weekday Registered and Causal'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Impact of seasons'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:humidity:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Impact of temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:humidity:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Impact of weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:humidity:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Impact of windspeed'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Windspeed (bin):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Windspeed (bin):ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:humidity:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Impact of working and non working day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='7' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Perfect]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Very hot]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Cold:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Hot:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Perfect:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Very cold:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[io:Very hot:nk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:humidity:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:temp:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Perfect]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Very cold]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[Very hot]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:season:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:temp:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:weather:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:workingday:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Weekly Registered and Casual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[wd:datetime:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hour by hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[thr:datetime:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='6' param='[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[:Measure Names]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[attr:season:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Typical hour analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[tdy:datetime:qk]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[avg:temp:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[max:temp:ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Atemp (bin):ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Season (bin):ok]</field>
            <field>[federated.1v0lqbz15kbtqt183r7k00b8rnzg].[none:Temp (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Hour by hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hourly Registered and Causal' width='192'>
      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
      /H/+XiKFvFqBwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hourly average count' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Impact of seasons' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Impact of temp' width='192'>
      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
      Z9RlRfP/AwgxdCGkfdAMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Impact of weather' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Impact of windspeed' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWXQc13nnf7V29YpGYwcIECRFghRNbSQdURZlbZRkS3Ecj63Iip34HJ+T
      M2dekte8zNs8JS/zluXEb5nMOMeWFcu2FluURJmiuEjivhMg9qUB9N5V1VV156EBkJQIrt0g
      QNwfz+WtLlR/dav6+9+t7r2lCCEEEskqRb3XCZBI7iX6/IZt25TL5Zoany9cFEWpqd1520II
      VFVqWHLnKPWsAhWLRQzDwDTNmtsOggDf9zEMo+a2JasHmX1KVjVSAJJVjRSAZFUjBSBZ1eg3
      P+T6+E6R46fOEEt1ojszZD2TzpZGEhGNrKPTmorXMp0SSV24YwF4jkPFF7gVBxSTRk0wmR7l
      UlGwY/tD+L6P7/soilKXblAA3/frYleyerhjAbhOiWRLJ4XMNEITOELFiieIGza5kktjNISm
      aei6XpeuyiAIAGQ3qOSuuGMBxJs7yFy+TPP6B9C9AkXfpCEawgrpFMuVWqZRIqkb8kGYZFUj
      e4EkqxopAMmqRgpAsqqRApCsaqQAJKsaKQDJqkYKQLKqkQKQrGqkACSrGikAyapGCkCyqpEC
      kNwSgRB8MZOn6N1fQ9ClACS3xFjJ4YvpPAP52i6dc6+RApDcFD8QfDadp9ktcrlQJriPFhO8
      4/kAIqhw8thxEm09+Llxsp5JV2sj8bBG1jVok1Mi7wuEEFzIl3AKeS7+7k1anv9T8m2NNJh3
      7DrLiju+ikJ6nIzt0ahpuJpFShFMpsfmpkQ+XPcpkUIIPM+ruV3JtbiB4NhMHvv0MVINDeSH
      L3O5u4MtifC9TlpNuGMBGCGL5tZ2psaG0dWAslCJJBIkTIds0SYVs+o+JVJRFDkhpo4IITg6
      nSdiFxkbGeRHP/oR/+/t9xgs2nwtFUet01zvpeSOBWA1NNNcHkVr2YDhlykHBvGIScjUKdky
      Z74fyFd8LuVK+Ce/YPv27aRSKR5oa+FyeoZ8e+q+qAbdRSNYobm9i8Z4hFiyiZZUAsuyUFSd
      aMSqXQol9wQhBEemczS7RaZGR9i+fTsAX3twC/b4MJcL90dvkOwFklyX8bJLxvUY/+IQu3bt
      wrKqmVpbWxtJz+Zy/v7oDZICkHyFYC73b7NzzKTTPPLIIwt/U1WVzV2dTExPk6+s/KquFIDk
      K1zMlzEUlfOf7mf37t1f6Wjo27QRPz3BQMG+RymsHYsIQFBxXRzHwXFc5FuUVg+OH3BsJk8q
      n6ZULLJt27avHBOLxeg0NQbypRVfDVqkGe9x7NCHHPxiCEtV+W///a9JLG26JPcAIQQnMwXa
      LJNjf/iYp59++rpv4FEUhS3dneydmSXfkaLBXLld0YuUAAbbv/EsG7sTmKkUsk9ndZCv+FzK
      lwlPjQDQ19e36LG9a9di5mboz6/satAN2gAVLn7RT0Miysq+RMmtIOZGe26Ihjjyyf5Fc/95
      dF1nQ0OM/nxpRVeRbyAAnbWb11CoBESXLj2Se8Sk7TLjVPCHB4hEIqxbt+6m39m8ppPp2QwZ
      d+X2Bt1AAD6OYvJI3wZWrr4lt4IvBJ9P59kcC3H40wM89dRTt/T2zaamJlKBy8AKfih24xKg
      u5OCvXIvTnJrXJ7rzsxdOkdjYyNr1qy5pe8pisKmVIL+fHnFVoNuIACXg+/uZ3x4lOLSpUey
      xLh+wNGZPFuiJocOHmT37t239e7lBzrbyeVyTNtuHVNZP25wpQZbdvbhCEW2Ae5ThBCczhZp
      ChmMnD5BR0cHHR0dt2UjZJp0R0z6V+hMsUUFcPHEJxw6OUwpPY2zlCmSLBklP+BctkRfWOPI
      kSM8+eSTtz13Q1EUNibjK/ah2KLjWdc9uIM9lQTj0zkWm/pwo3pfvd4LJqkNQgiOzxTYEA9z
      +vPPWLduHS0tLXdkqyuVJJgeZrxQojO+suoLiwpAVQWfv/8Oou1B8kDDV44QDF74jHS5Gd0d
      Je+ZdLU3EzcEXriZ9lSsnumW3CUlP+ByocyzqTD/5+hR/uqv/uqOMy1NVemNR7iYKdw/AsjM
      lHjyO9+l7IrrtgHs3DRFEUIXPrHGVpoDwWw5y9ikz66dvfItkcucYzMF1scsDn+yn76+PmKx
      GJXKnb/bbW3M4v3RaYqlEuYKmqW3qAA0XWVs6DI5R6FzXS+NkdC1B6g6hiLI2ja6KDLlh+hq
      S9HdojKaztDVkpRviVymFD2fwZLDNxMmfzx7lp/+9Kd3fR9bNI2wmWcsX+KBtuYapbT+3OAl
      eUXe+L/vgl/Gb+rg+y89c9vG5UvylieHprIoisLUoT8SCoV49tlna2L383SWifQ0L/atWzFt
      wBt0g4bpWZNAa+rkkb6bPxaXrAxKnk9/wabXVDh9+jQ7d+6sme3eeIRJT5ArFGpms97cQAAe
      Zz87TzQSoqN37dKlSFJXTmWK9MYsTn7+GZs3byYer936TQ2mTjIe4+LEVM1s1psbCEDBCqv0
      D48jKxn3ByXPpz9f5oGIwZEjR3j88cdral9VlIXeoJXSQbHojLAjf9xHeMODPNiaZGU+5JZ8
      mTPZIj0xi/MnTrB27VoaGxtrfo6emEVeDzExtTJKgUUEUGBswideGCUTaV70QZhk5VD2qpNd
      +mIWBw9+yhNPPFGXhmrC0GlJpTg9NLoiBsgtIoAwvWuTaC3dNCoVVkZhJlkMIQRnsiXWRCwG
      z58llUrR3t5el3NVq0FhLhdtHGf5D6JZ5DmAzte21653QHJvsf2AS/kSz7Un+fmvDrBnz566
      dlP2RC0ONaS4NHCZBzcvPq1yOSCXRbnPEQLO5Up0REJMDl5G13V6enrqes6EodHW3MSRc+dx
      3eXdgpQCuM9xAp+LuTJbEhEOHDjA448/jqZpdT2noij0xsJkjQhvvfXWsu4RkgK4jxHAuWyJ
      trBJfnKccrnMxo0bl+TcvfEwrZs2M5wr8t577y3bBrEUwH2M6wecz5V5MBnlwIED7NixY8mG
      jkR1jV3tKVqfeJpLQ8Ps27dvWYpACuA+5nyuRKtl4GZmmJqaYuvWrUt6/jWREJuaGuh6+gVO
      nDjBkSNHlvT8N0MIcefvB5Asb9wg4Ey2yHMdKT5+920efvhhQqHQzb9YQxRF4eFUnCm7wtde
      fIVPfvsmkUiEBx98cEnTcTVBEDA+Ps65c+c4e/asFMD9yvlsiRbLRCkX6e/v55lnnrknIzQ1
      RWF3W5LfDHnsfuU7vPvmG4TD4Vtad6hWeJ7HwMAAZ8+e5fz581iWxaZNm3j55ZdvNBz6xojA
      p//8WSLNazC9HDnPpLkhQjhkUHR8ErGIHA59j/CCgDcuT/F8Z4oj+z5ECMGePXvuaZrGSg5/
      nMyw1S/yzq//i1dffZWOjo66iNLzPNLpNJcuXaK/v5/R0VFaW1vp6+ujr6+PZDK5cN47LgEC
      r0JzVw8jI6MQeGgCxpwQiuvQsb4PIcQ1oR7U0/ZK5lyuRItlYHouJ0+e5Mc//vE9v09tYZON
      8TDDts5ze/bwi1/8gh/+8Ic0NTXdte0gCCiXywwPD3Pp0iXOnz+PYRisX7+eHTt20N3dTTh8
      7YCe+ftxxwJQVYWp8Ul6161naOASRiCwKzalUoVuVSEIAoQQCzl1ramn7ZWMLwQnZws8097I
      Z4cP0tvbSyKRWBb3aUtDhLSTxW3pYteuXfz85z/ntddeI5G4vbXHhRDYts3Y2Bj9/f0MDg5S
      LBZpa2tj/fr17Nq16yvDvBe7/jsWgFsuMpuZwddMIgbkfYv2pgTxiMlMrkBrKoGqqgvTImvN
      /JTIetheyVzIFGm2TBKawhdffMGrr766rO7RrtYk74xMs2PzVh6ybd544w1++MMfEolEFv2O
      EIJSqcTU1NSCw+dyORKJBOvXr+ell16ira3tjqrad9wGuBVkG2BpKXo+vx1K82xHI5dPneDc
      uXP8xV/8xbKbnjhectg/meX5jkY++eB9pqamePXVVxf8ZN7hJycnGRgY4PLlyxQKBWKxGL29
      vfT29tLa2ko4HL7ptQkhyFd8wrqKcb13HUgB3B/Yns/vx2ZYGwvzYCLMv/zLv/Dyyy/XfdzP
      nVB9EUeRkZLD060N/O43b+F5Ho8++iiDg4MMDAxQLBZJJBL09PTclsPP28+4HiMlh8GCTd7z
      0BWFRtOgLWzSFjZpMHUMVZUCuB9w/YD3x2ZosUwebYpz7uxZDhw4wF//9V8vu9x/nkAIPhyf
      JWHoPNQQ5s0336RUKrF27Vp6e3tpaWm5ZYeH6rCPYqXq9GeyRYSAjkiInqhFKmTgBYK04zJe
      dpmyXcpeQKOpSwGsdLwg4IPxWWK6ztdbEijAz372M3bv3s2mTZvudfJuSNnzeXtkmu1NCdZE
      zNteQ0oIQa7iM1S0uVywKfs+7WGTzQ1RGk0DTb2+rUAIHD8g7VTkg7CVjC8E+yezmKrKzpYE
      qqIwMDBApVJZskFvd0NY13iyLckHY7M0rmkibizujr4QlDyfoudTrPjMuh7DRRtfCNZELR5r
      itNimWjKzZflVBWFsK7RrWtSACuVQAgOTmWpBIJvtjeiKQq+7/Phhx/WfLqjF3jsG97HPx/7
      Z9Ym1rJn7R4e73icqBG96/M0hwy2Ncb4cHyWnc0JSl5QdfK5UPJ8Sl6AGwSENY2orhLVNRKm
      zu62JKlQtQZwp+mQVaAViBCCz6bzTNkuz3Wm0BWFTCbDW2+9haIovPbaazXp+vQDn4PjB/mn
      o/9EIAJe3/I6Ja/E3sG9nJk5w9bmrTzb/Szf6PoGKSuFqtzZ2EohBAemssy6HlFduyZEdJWI
      rmFpKmod2jNSACsMIQTHZwsMFm2e72zCVODUqVO8//77bN++vSYTXvzA5+jUUf752D+TcTL8
      zUN/w9NrnkZTr9jNOBk+HfuUvYN7+Xzqc9Ym1vL0mqfZvWY3HdEOdHVlVC6kAFYQQsDZXJEz
      mSIvdDWB6/CHP/yBsbExXn75ZTo7O++qShKIgFPTp/jX4//KSH6En3ztJ7yw9gVMbfHfTyAo
      ukW+mPqC9wff5/DEYZKhJLu7dvPN7m+yLrEOQ7t3v5EQgqyTxdAMQloITdGuuUdSACuIS/kS
      X0wX2NOVYnZslN/+9rf09PTw7LPPYll3/jZnIQTnM+f5t+P/xvnZ87y+5XVeXvcyYeP2F8Qp
      e2VOT5/mg6EP+GT0E1RV5cmuJ3m251k2JjfeUEy1ohJUGMoNcXjiMPtH93Ns6hgNoQZURcXS
      LBpCDTSEGkiGklIAK4XBgs2hdJZvtjZw6vBBjh49yp49e+jr67vjXF8IwWB+kJ8d/xmfT33O
      Dzb9gO8+8F3iZm2WS3R9lwuZC+wd2su+4X1UggpPdj3JM93PsKVpCyGtdvMTSpUS52bPcWDs
      AO9efhcVlW0t23ii8wn6GvuwdAvHdyhWimSdLFknS8bJrGwBeL6/otaiv1PmhxI/ZMIn772N
      aZp8+9vfpqHhq68tuRWKlSIHxw7yu4HfcXzqON/b+D1+sOkHJK1kjVN+hYpfYSA3wN6hvXw0
      /BF5N88TnU/wXM9zbGvZdttiCETAUH6IIxNH2D+6n1PTp2gON7OzfSffXvdt1sTX3JLNFSuA
      0WKZfRNZUiGDJsugKWTQaBrEDW3ZPv28XVw/YLTkcDidIz45yOlP/siuXbvYsWPHbTd0Hc/h
      0MQh3hl4h4NjB9mQ3MCLvS/y1JqnqlWBG90zIcDOQPoM6CEw42BGwYiAEYXbrON7gcdwfpi9
      Q3v5cOhDJkoTfL3j6/TEe3B8B9d3qyGoxl/e5/gO6XIaQzV4qOUhnuh8gu1t22mymq5pqN8K
      K1YAg4OD/OLXb1ExLIzGFGZTC1aqmUgiQSpk0hyqiqLJMojpK0MUgRBMOxVGSw5jJYdZ10O3
      S6SPHkbLZ/jOd75DW1vbLV+LF3gcmTjCOwPv8NHwR6xrWMcLa1/gmZ5nbt5tKQQUxmDqDKRP
      g1uAeAfoEagUoVKqBrcIqg5mDEKxamzG5z4nINIMkSbQr99G8QOfidIEHwx9QMbJENJCmJpZ
      DWo1/vK+kBYibsZpj7ZjqMb174dfAXsWSjNQnIBQHEIN1TSFEqCZoCgrVwBBEOB5HrZtMz4+
      ztjYGOPj40zMzOLoJnpDI2aqBTPVTCQepykcIm7ohHWViKZVY10jrM33McP8bVwKsQghEEC+
      4jFachktOYwXyxSm01TSE3hT4/iZGUTg89C2bTzzzDM3bO9U7Ql84XMifYLf9f+OD4Y+oCPa
      wUu9L/H82udpDjcvfm1CQFCBzEDV6afPVnP25i3VkOgCRQVFqR575Yvg2VWBOAVw89Vtt1At
      NcozUEpXHS6cqooh0jwXWsBKgqoBStX2vM1FvfKqP4gAnByUpqE8XXX28jQUJqritJLVc+pW
      9cd18tXjnVz1Wsx4bQRw8cwxshWTrtYUibBGzjNpS8XrKgDHcxjIDBAJRRZyCF3RURSFcqnM
      5OQkE+MTTIxPMDWboewJ9HgDajiKZoVRrQhqOIxmRdCtMGFTJ2zohHWdsKZi6Rq6qqApCqqi
      oCnV+a0q1aU0VEWp/l1V0RSo3mGBmPvt5m/qvKNX91f/bgcBk2WXsWKZTCaDOzlGZXqCcMWm
      qSFOa1srLS0ttLS0EI1FCURA2SuTcTLMOrPM2rNknAwZu/o5Y2fIOhkKlTwTxXGaQyleWvcS
      z/U8T1es88Y30ivD9IVq9SY7CNHmOafvg3DTVU55FwhRFUR5uuqspfSV4OTncuc4aFbVqecD
      wdyNm9931XZQqQpOD82Jqqma3nATxNrBSsz9JleJCjEnXgEVG5xsLQQguHDhIqFAkPXLFAqC
      r+94GBH4FItFdF2vy4SM48Mf8w8H/ie28HFEgCsCUFQ0zUBXDTRVR1cNdM1AQ8MdHkckkgSa
      jl/xqHgevuejBhomJiEzRsiMYRoxzFAC3YxW7SjmVbGJrhjoSmhun4GmGiiqhoKCmLvBYu4m
      z8fM5c5CVLcrvs1U9hyTmbPMusNoUY1oIoyigi88/KAagsDHCyq4vo0W+DSqJknVpFE1SCpG
      NZ773KCaJDSLpB6mzUygcCuOK6q5ZmYYClPVHNOIXvnbQvSlHP+aXV/622L7F7Ple9WSwi3M
      fT+4UsLMlzjKXLajzJcSSvW4UBwUfc7Hr77eq4rz+Y2rhRX4C9s1KQFOHPscL9BIJBOYwsVq
      6qY5Ea5rCSAqNiI7NPd4fL74D6gIn4oI8ObiivBxSyWmf/VzrB3b0NrbqtMpgWDhe4Lgqjgg
      IJjLuRfOt8g2gCLUKw73pd+hGikLv4ky989QNQxFQ1fUhaChXvezpeqYio4yX2cXAQu52YLD
      zG/zpXRcN0FXPvsuBN71j13MxvX2X88Jb2s/Vxx+oTr0JadfEANQKYMZ+aqoFtxZXPtZUatV
      LVUDRau2W1StNgIo5TPYgU7UMjENDdv1CFsh+RxAsuypSd0kEk9y9YzOsFXfxVclklohl0aU
      rGoWSgDbtimXyzU1btt23RrB892g9aheSVYPd9UGGLl8gmLQRlRMMzSRpuuBB1BKCsWKTd8D
      a2UbQLLsuctGcIGBAZvAz7J2bRvnL/Rz6fQIT377BaK6WOgGrYeTCiHwfX9ZrXkjWXnclQD6
      zx7mwmCFDeuTTE3N0LlhA2pZJWcX2bxpHSVZAkiWOSt6KIQUgORukb1AklWNFIBkVSMFIFnV
      SAFIVjVSAJJVjRSAZFUjBSBZ1UgBSFY1UgCSVY0UgGRVIwUgWdXUZChlITuDHejEIxamoeFU
      fKyQHKcvWf7URAAXL10iEDqJVBJLVIi09mDVbtlHiaRu1EAAARqCkhsQLueYzHt8vTeE7/v4
      vn/b7326VebnA0gkd0MNBKCgaxq6YZBItdHbbTCZztDRklx4SXY9hiwHQYCiKHI4tOSukPMB
      JKsa2QskWdVIAUhWNVIAklWNFIBkVSMFIFnVSAFIVjVSAJJVjRSAZFUjBSBZ1UgBSFYtQggp
      AMnqRAjByZMnazMc2nMdio5HNBxCU1W8IMCQqzZLlilCCA4fPsynn35aGwGcOXWceMsaZqfT
      WKqHnuygOSEFIFl+BEHAxx9/zKlTp/jLv/zLGs0Iy2Uo2hCLm4wWfR7v3rAk8wE8z7v5gRLJ
      HL7v8/777zM2NsZrr71GNBqtjQDa2tpJ5z1ijS30dumMpzN0yvkAkmWE67q8/fbbFItFXn/9
      dcLhMLDofICAXCaHFwSASrKxYe59vLeHnA8gWQ7Yts0bb7xBKBTilVdeucYfFykBfC6eOUXO
      qQAWjz/1deQUX8lyQQhBLpejVCrhui6O42Db9kJcKpWu2ZdOp+nr6+OFF174yiu1FhGAwaOP
      P8a//q//jdO2hp1PfX0JLksiuTm2bfPee+9x5swZGhsbCYVC1wTLshb2W5ZFKBQiEonQ3NyM
      qn611/8GbQCNx77xKMcHC3W8HInk1hBC0N/fz1tvvcXGjRv527/925pUrW/YCA60EBGrLJ+W
      Se4ptm2zd+9eLl68yJ/+6Z+ybt26mtm+aS9QpWQjFx+R3AuEEAwMDPD222/T3d3NT3/604Xe
      m1pxQwE0t7YwPG0j13iTLDW2bfPRRx9x/vx59uzZw8aNG+vyPOkGAvA5tHcvattmHEB2NkqW
      AiEEg4ODvP3223R0dPCTn/yEaDRat/PdQAAmazasY8oV0vklS4LjOOzbt48zZ87w/PPPs2nT
      puv23NSSGwigzMCJS+QaWqiAfA4gqSujo6P8+te/prW1lZ/85CfEYrElOe8iAggY6E/z/f/x
      Uz7//DjWkiRFslo5efIk7777Li+88AJbtmype65/NYsIoMLJ46fp6ukmMzaGs/iBEskdI4Rg
      //79fPbZZ7z++uu0tbXd8vcyrkfZD3D9ACcIcH2BG1S3bW9+X4ATCBw/YE00xJaGKG1h85rG
      9KJrg85ODHLoi9P0bnmEjd2tN2yBCxEwMjJGMpkkYukUbJ9ELCLHAkkWxfM83nnnHcbHx/nB
      D35APB6/aS+PEIJ8xefTqSzZikeDqRNSVUxVxdSU6ramEtau3acqCgOFMmezJQIh2NQQYUM8
      gqkqtVkcd/zyBS5NlelIRfFdm471fUQMta4CmB8OLQWw8iiXy7z55puoqsqf/dmfEQrdvIXp
      CcHpTJEzmSJfa4zR1xC57QGaApgqu5zLlRgtOayJWjWo2QQ2p871U3JcElYvjluhW1UIggAh
      xEJOXWvqaVtSP2ZnZ3njjTdYu3YtTz/9NJqm3fA3FMB4yeHITIFkyOBbXU2ENQURBHf0gLbJ
      1NjVHMcJYgwUndotjz45OYmuGySiJjNFn9ZUQlaBJAsIIRgZGeFXv/oVO3fuZOfOnTdt7BY9
      n8+nc0zbFR5rTrAmEqr5wzD5fgBJ3RFCcObMGd59911efPFF+vr6bujIfiC4kC9xcrZAbzzM
      15IxTK0+PUOyc0dSV4QQfPrppxw+fJjvf//7dHV13fDYaafC4XQOVVF4uiNFo6nXZQjEPFIA
      krrheR6///3vGRoa4kc/+hHJZHLRY23f5/hMgcGizcOpOOviYbQ6Ov48UgCSmiKEIJ/PMzMz
      wyeffIKiKPz4xz/Gsqxrjin7AdNOhcmyy4Ttknc9emIW317TTFjXliy9UgCSO8L3fTKZDOl0
      +powMzODaZokk0nWrVvHE088gaZpZF2PSdtlsuwyabtUAkEqZNBqGTzWFCcVMjDqtILIjZCN
      YMkt4fs+xy8NMDSZJj09zezsLP7cyhwNyQaampppam6mqakJc65f3/YDpuwKadvF0FRaLZNW
      y6QtbBI3NBRYcof/MlIAkptS8Tw+vjTEhBqiPWotOK0yF1BAQWHelRWlut9UVVosg2bLJLKE
      1ZrbQVaBJDfE8Tz29o9QCUV4pbOJmHF/ucz9dTWSmlJ0K/xhaJJwyOLZrmZMbXnm4neDFIDk
      uszYDu+PpOkwdf6kswW9Tg+i7jVSAJKvMFK0+XBkik2WxmNdrajqvW2o1hMpAMkCQgjOZksc
      Gp3k4ajBtu6Oe95LU29qIoBsepxZR6EtlSBk6pQdn2hEziNbSfhC8Fk6x8nhMXY1RdnU3XXf
      Oz/USAAVoVKamWSkUsb0HJJd62thVrJEuH7Ax5MZBi5f5pmuFnrXrA7nhxoJwHdtmjrXUJgc
      ZDTv0bleX5L3A8i5AHdPwfP5cDzDzOVLPP9ADx1tbffVexdGC6P818X/YtaZJRDVOSoCsbBd
      EwGMjw0T6Ena13SyvdckPZOjvblBvh9gGSOEYLzs8uHINKWLp3ll+8O0trTc62TVBD/wOTF9
      gn8/9e8cnTrKnt49bG3ZiqIoqIqKwlys1GhK5GLIJ8HLk0oQ8MV0nqPD42iXz/Hdbz5JY2Pj
      vU7WXeMHPmdnz/KPh/6RrJvltb7X+Na6bxEzF19iRfYCrSKEEEzaLp9MZBg6e4qmbJrvfPtb
      S7YGT72wPZsDYwf4jzP/wWRpkr977O94ovMJDO3mmaMUwCqhEgQcnylwciLN5KE/0teS4sU/
      /+6KLUEFgqyd5Z2Bd/jlhV8SM2K8tvk1dnftxtJvvQdyxQogANwgkMs23gQhBGmnwqdTWfKT
      E0zu/4AndmznT/7kT5Z0AapbRVBd7MD2bWzPvhJ7NvlKnrxbDRdmL7BvZB9bm7by91//e7Y1
      b0NTb3+oxoptA0yUHT6eyNAZCbEhHqHZMu7oPWb3M14gODFb4GK+hDF2mf5DB3jxhRduOid3
      qci7eS5mLnI8fZxjU8cYK46Rd/M4voOu6tWg6BiqgaEZxIwYcTNO3IzTFmnjxd4X6Y5339W1
      rFgBBEFAznEZtj0u5csAPJAIsy4WXtIZRcsRIQSzrsf+yQxhVcE9c5z+s6f58z//c9rb2++J
      8wshGC2Ocnr6NEenjnJ06igTxQk6Yh1sbdrKtuZt9CR6iJtxInpkQQCaoi3E9Uj3ihWAbdvM
      zs7S3t5OAKRtl/O5MiMlmzYrxMaGCB1hc9WVCoEQnJwtcDpbYlvC4vRH75PP5ajhc0AAAAo7
      SURBVPje975HPB5fsnTYns2FzAWOTR1bcHhd1elr7OOhlod4pOURNiQ3EDEiqMq9q4qtWAGM
      jIzwi1/8glAoxNatW9m6dSvJZJJKIBgolDmfK1H2Ax6IR3ggESaq1ycHWQ4IIfCEYLBoc2q2
      iKWrPBTW+M0bv6SpqYlvfetbdVudLxABk6VJzs2e43zmPOdmz3Fh9gKTpUnWJtayrWUbD7c8
      zCMtj9AaaV3of18urFgBBEGA53lMTExw8uRJzpw5QyKRYOvWrWzZsoVYPE7W9TifKzFQsGkw
      dboiIVosg0bTQFeVZTEl727whWDarnAhX2K4aNMcMtmYiKDnZ/nP//xPHnvsMb7xjW/U5Br9
      wKdQKdCf7a86++x5LmYuMpgfxFANNjZuZFPjJjY2buSB5AP0JHow1CXsohACEBD4UClCeeZK
      KE5BKA7hJrAaIdwIVgOoxsoWwNUPwjzPY3BwkJMnT3Lx4kWamprYunUrGzduxIpEGSu7TNgO
      U3aFQsUjomukzOp0vRbLIGZo6PdgUvbtIoSg6PlcypcZKNgAbIiH6Y1Z6IHPhQsXePfdd3np
      pZfYsmXLHZ/HCzyyTpbj6eMcnjhcbaQWxuiKd13j6L2JXpJW8qoJkfVCVJ088KqhUoby7FWO
      Pg1ODiolEAGEU1dCKAGeA/Zs9Tv2bPVYzbx/BHA1rusyMDDAiRMnGB4epqWlhc2bN9PW1lZ9
      yZqmUwwEWV8wW6kuz+ELiOjqgiAaTYOQpmKoyrJoRzh+wGjJ4WK+RMb16AqbdGgCP5dheGiI
      oaEhMpkMpmnyyiuv0NnZeVv2vcAjXU5zcvokh8cPcyx9jFl7lg3JDexo28GjrY+yMbmRsLHI
      S+rmc2C/csVJ/QqoKigq1YnDyo1j4YPvglusOuiXQ6U0Z78Cqj6Xm1/l6FaymtObsTmbN0AE
      4BbvTwHMI4TAtm36+/s5ffo02WyWcrnaY6QoCqparY9aloUSsvBNi7JmoDQ0oscbiITDRMJh
      YqZBwtSJGxoJQydmaAtLcddy8aZACLygWp/3AoHtB5R8n7GSw0ihTFAqEinM4qcnmRofw7Zt
      EokE3d3ddHd309raetNlxoUQOL5DoVIg62S5kLnA4YnDnJg6QdErsr5h/YLDr2tYR8QIQxCA
      V646oFsEt1CNK4VrP/tO1bFEMCeIL6Es/HdVzJyziupKuCIAw4JQQ9WZQ4m57QSYUdDDYIRB
      NW7u5LdATQQwevkCWc+kPZUgFtbJOdDUEKurAAayA/zy7C9pjDQu9A3HjTgxM0bEiGBpFpZu
      EdJCWLqFrujM3WYqlco1oVwuUyqVrgnFUomS41KqeHi6gW+YBKaFFo1jxOKEIxHCkQgx0yBu
      6IQ0FRVQFQVVmRPYVZ9VruyHqnPbfkDZm4t9H8fzcR0H13VxHQffdfDsMt7sNN74CFFNobW1
      le7ubtasWUMqlSIUunbBWIHA9myyTpaMk2G8OM5YcYzRwihjhTFGi6OUKiVURUVXdXoSPWxv
      286jLQ/TYzUTFgFKeRZK09VqRSldzX1Rqrm5Eas6ohkDI3ple945NfNKWOjdEVdKiHlxiODa
      z4hqrq6F4HYeaC1Uiyrgz8WeW43nSyHfAdSrBKMsRDUQgODs2XMYQuCoAW7ZZ/PXtmIo1RJA
      13V0vfrAuVb1ayEE6dlzvHfwH8j7NvnAJe+75OZiB4GnqHiqiqeo+IqKEiiYhoWm6Qs9Eaqi
      Xgmo136ecxAVFeELAi8g8AK8sodbruC4PiZholYL8XArhmahqBqKqqIoanVbUVFUFRa2q38H
      geeUqThFKk6BilPAdYpUKkUqgYsfOHi+i0eFQA2IJWI0tjRiRS2EKvACj0pQwQu8he35z2Wv
      jFcpEQo8woFPqxqiUwvTYcTpjLTSGW2n0WwgakSI6GFUEYCdATtbrUuXZqA89zkIwJyrUuih
      qnMqylW5u7jB9lxc/cG+tL3Id0VQrQYFfnU78K98vnpb+FXn9hzwXQQKKCpCqTq5QKuKb34f
      4ioxXktNBHD69Bl0ISBkEjg2XRs2EzW1BQHUowTAzqJOHr32JjKXISDwRIBHgCcCKuUSU795
      A/OhzajtrczlPQTXDYIA8Kn2svgLtq5sX7NPBPgiIFhImIJQrmxfyW2uyn2EALX6N2VhTZ1q
      A/xKPP9tBU1R0VUNQ9HnYm3uCemVffOfTUUjoeqEFA1L0VAXqhriquiqn1wE4JaqYb7+LsS1
      6V2ouly9PX9N19u+3vGLfWf+HMqc02pz7QatWhKo2pXta2K9Kko9hFDmHH6+vaFoc2K4KixC
      TapA02OD5PwQzQ1RomGDbLFCY52rQLczHFoIgbBtlFBoLgeWSKrc141gieRmyOxQsqpZGA5t
      2/ZCF2Gt8DwPVVXrMuy23i/JC4KgbsOFpe3lY7uuVaD5SfH1EkAQBGh1Wq7P87yF3itp+/61
      XVcBzJuu16oQ9bI9b1/avv9t11UAEslyZ0kawZVSji8+/4xTFy7XxJ4IfI4ePsCR42dqYu/L
      9J87wf6Dn+H5wc0Pvk38SpkP/rCPSs0tw/ToAIePfEbBqX26Z8cuc/DwIQZGp2tq1y5kOPL5
      MfygwpED+zl6+mLNbGenJzh68ixuOcfRz45w6vxX/a/uc4JnJkYg3EhXWwsVozarDwjhkGha
      S+AV8YFatwI6unrwtJk6FMmC0eERmlqaa2y3ytRkGkVVcRyXWKi2S1MqisDzfESN74kVS9Ka
      yoAzTUP3w4jyaM1sNzS10ZAvY1hxOjta8fToV46pewkQb2xGL01w7OIIrlubfE9RTGYm+5ku
      2HW4gIAvjhymVHYIqHHtUAjKpSLDly+Ryde2xw2goTGJpgRkssWa2y6XHUIhg3KhVFO7pdw0
      Fy5cZCTjMz1wjHy5dqv9zU6OcvHiRQYunePk+SEc96sr3i1JG0AEAZ7vo6gqek16bQS+H4Ci
      oNW8h6navSqEgl6nWWRBEFTHDNXYrhAC3/PR6pDuqm0PVddrOjx83jdUVQMCFEWr2XLsge/j
      z3WBzt/zL/ufbARLVjXySbBkVSMFIFnVSAFIlhUVp4TjBeQL+Vs6XgQ+U1NpAuEzPjzETLZw
      W10XK3ZpRMn9ycjp/ZTan+TEH3/HKy/sYTrvkkrGsAyNciWgnMsTaWxCdQtM5RzE7AU+OlPi
      h9/byd7fHyJi2Tz13DMUfZ3Zi4copR5ic6tBWegc/+QDNu18ivJshlTSwvFVKQDJ8kL4Hof3
      f8jUZJaP932Eqegc0S2eebCTIyNZzp+Y4q9+9BL7PtpH1NIoBwodnWtRFWhsbmdDY5rjRz7h
      4+PjPLezHRE4/Od//BIl0UajVUHTBQMDgxzLjxN4ihSAZHkRbmjhm09v49KJP9JgwPCMw/qW
      BIdPXCDZvYFHHukgbOq0NMUZmS7z4KZe/FAbqqJTmBnkjNZKROTZtGEt3evWcnw4w4YN6wk1
      dxMjR3o6RyqVpKEpiiZkN6hklSMbwZJVzf8HljdgAFFp6fMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Impact of working and non working day' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      ylsGKb/YAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Typical hour analysis' width='192'>
      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
      Ggo+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weekday Registered and Causal' width='192'>
      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
      QgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Weekly Registered and Casual' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
